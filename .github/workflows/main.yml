name: iOS Robot Framework CI / CD Tests

on:
  workflow_dispatch:

jobs:
  run-robot-framework-appium-ios-tests:
    runs-on: macos-latest

    strategy:
      # Node version matrix
      matrix:
        node-version: [22.11.0]

    steps:
      # Step 1: Checkout the current repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Setup node
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          # cache: 'yarn'

      # Select Xcode version
      - name: Select Xcode Version
        run: sudo xcode-select -s /Applications/Xcode_16.2.app/Contents/Developer

      - name: Check XCode Version
        run: /usr/bin/xcodebuild -version

      - name: Install Xcode Command Line Tools
        run: sudo xcode-select --install || echo "Command line tools already installed"

      - name: Check Node Version
        run: node -v

      # Step 2: Install Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12' # Specify Python version

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install robotframework
          pip install robotframework-appiumlibrary
          pip install robotframework-seleniumlibrary
          pip install Appium-Python-Client
          
      # Step 4: Install Appium
      - name: Install Appium
        run: |
          npm install -g appium
          npm install -g appium-doctor
          appium driver install xcuitest
          appium-doctor --ios # Check Appium setup

      # Step 5: Clone repository
      - name: Clone Weather App Repository
        run: |
          git clone https://github.com/fmidev/weather-app.git
          echo "Repository cloned successfully"

      # Step 6: Install Yarn
      - name: Install Yarn
        run: yarn install
        working-directory: weather-app

      # Step 7: Install Pods
      - name: Install Pods
        run: pod install
        working-directory: weather-app/ios

      # Step 8: Get defaultConfig
      - name: Get defaultConfig
        env:
          defaultConfig: ${{ secrets.DEFAULTCONFIG }}
        shell: bash
        run: |
          touch defaultConfig.ts
          echo "$defaultConfig" >> defaultConfig.ts
        working-directory: weather-app

      # Step 9: Run Robot Framework tests
      - name: Run Robot Framework Tests
        run: |
          robot -d results tests/weather_view_tests.robot
        continue-on-error: true

      # Step 10: Upload artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: robot-test-results
          path: |
            ./results
            ./stdout
          retention-days: 2
